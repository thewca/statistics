name: Deploy backend

on:
  push:
    branches:
      - main
    paths:
      - "server/**"
      - ".github/workflows/backdeploy.yaml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore gradle dependencies
        uses: actions/cache@v2
        with:
          path: "~/.gradle"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/server/build.gradle') }}
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Add version info
        run: |
          export GIT_HASH=$(git rev-parse --short HEAD)
          sed -i "s|version: 1.0.0|version: ${GIT_HASH}|g" server/src/main/resources/application.yaml
      - name: Build jar
        run: ./server/gradlew build -p server -x test
      - name: Restore application.yaml
        run: git checkout server/src/main/resources/application.yaml
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: thewca/statistics-server:latest
      - name: Blue green deployment
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.CI_CD_AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.CI_CD_AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}

          aws deploy create-deployment \
            --application-name ${{ secrets.APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.DEPLOYMENT_GROUP }} \
            --s3-location ${{ secrets.S3_LOCATION }}
